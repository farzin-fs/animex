name: Distribution

on:
  push:
    branches:
      - main

jobs:
  distribution:
    runs-on: ubuntu-latest
    name: Distribution
    steps:
      - run: echo "VERSION=v$(date +'%Y.%m.%d')_${{ github.run_id }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@master
      - uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
          yarn install

      # - name: Install Pod Dependencies
      #   run: cd ./ios && pod install && cd ..

      # - name: Install Detox Dependencies
      #   run: |
      #     brew tap wix/brew
      #     brew install applesimutils

      - name: Run lint check
        run: |
          yarn lint

      - name: Run TypeScript check
        run: |
          yarn tsc

      # - name: Run Detox Build
      #   run: yarn test:e2e:build

      # - name: Run Detox Test(s)
      #   run: bash ${{ github.workspace }}/scripts/run-e2e-ios-debug.sh

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease --no-daemon

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip

      - uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_SENDER_TOKEN }}
          message: ${{ env.VERSION }}
          document: android/app/build/outputs/apk/release/app-release.apk
